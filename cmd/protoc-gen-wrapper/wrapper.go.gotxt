{{- /*gotype: github.com/smart-core-os/sc-golang/cmd/protoc-gen-wrapper.ServiceModel*/ -}}
// Code generated by protoc-gen-wrapper. DO NOT EDIT.

package {{.PackageName}}

{{/*Imports handled by the invoker code*/}}

// Wrap{{.Underlying.Exported}}	adapts a {{.QualifiedServerName}}	and presents it as a {{.QualifiedClientName}}
func Wrap{{.Underlying.Exported}}(server {{.QualifiedServerName}}) {{.QualifiedClientName}} {
	conn := {{.WrapServerToClient}}({{.QualifiedServiceDesc}}, server)
	client := {{.QualifiedClientConstructor}}(conn)
	return &{{.Wrapper.Private}}{
		{{.ClientName}}: client,
		server: server,
	}
}

type {{.Wrapper.Private}} struct {
	{{.QualifiedClientName}}

	server {{.QualifiedServerName}}
}

// compile time check that we implement the interface we need
var _ {{.QualifiedClientName}} = (*{{.Wrapper.Private}})(nil)

// UnwrapServer returns the underlying server instance.
func (w *{{$.Wrapper.Private}}) UnwrapServer() {{.QualifiedServerName}} {
	return w.server
}

// Unwrap implements wrap.Unwrapper and returns the underlying server instance as an unknown type.
func (w *{{$.Wrapper.Private}}) Unwrap() any {
	return w.UnwrapServer()
}
